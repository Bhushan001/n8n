{
	"info": {
		"_postman_id": "375f91af-285a-4b48-86fd-f7b3d4f92881",
		"name": "AI Workflow App - API Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "786934",
		"_collection_link": "https://n8n555-8857.postman.co/workspace/4131adc3-9185-47ef-8c9c-46fdec13eb8d/collection/786934-375f91af-285a-4b48-86fd-f7b3d4f92881?action=share&source=collection_link&creator=786934"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register New User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"testuser\",\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"phone\": \"1234567890\",\n    \"country\": \"USA\"\n}"
						},
						"url": "{{protocol}}://{{host}}:{{port}}/{{basePath}}/auth/register",
						"description": "Registers a new user with the application. Now includes firstName and lastName fields."
					},
					"response": [
						{
							"name": "Successful Registration",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"testuser\",\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"phone\": \"1234567890\",\n    \"country\": \"USA\"\n}"
								},
								"url": "{{host}}:{{port}}/{{basePath}}/auth/register"
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"email\": \"test@example.com\",\n    \"username\": \"testuser\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"phone\": \"1234567890\",\n    \"country\": \"USA\",\n    \"role\": \"USER\",\n    \"createdBy\": \"system\",\n    \"createdAt\": \"2023-01-01T10:00:00\",\n    \"lastModifiedBy\": \"system\",\n    \"updatedAt\": \"2023-01-01T10:00:00\"\n}"
						}
					]
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"jwt_token\", jsonData.jwtToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": "{{protocol}}://{{host}}:{{port}}/{{basePath}}/auth/login",
						"description": "Authenticates a user and retrieves a JWT token. The token now includes firstName and lastName claims."
					},
					"response": [
						{
							"name": "Successful Login",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\"\n}"
								},
								"url": "{{host}}:{{port}}/{{basePath}}/auth/login"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"jwtToken\": \"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0QGV4YW1wbGUuY29tIiwiaWF0IjoxNjc4OTAyMjIyLCJleHAiOjE2Nzg5ODg2MjJ9.SOME_FAKE_JWT_TOKEN\"\n}"
						}
					]
				},
				{
					"name": "Get Current User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": "{{protocol}}://{{host}}:{{port}}/{{basePath}}/auth/me",
						"description": "Retrieves the current authenticated user's profile information."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt_token}}"
									}
								],
								"url": "{{host}}:{{port}}/{{basePath}}/auth/me"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"email\": \"test@example.com\",\n    \"username\": \"testuser\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"phone\": \"1234567890\",\n    \"country\": \"USA\",\n    \"role\": \"USER\",\n    \"createdBy\": \"system\",\n    \"createdAt\": \"2023-01-01T10:00:00\",\n    \"lastModifiedBy\": \"system\",\n    \"updatedAt\": \"2023-01-01T10:00:00\"\n}"
						}
					]
				},
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{protocol}}://{{host}}:{{port}}/{{basePath}}/auth/users",
						"description": "Retrieves all users in the system. This is a public endpoint - no authentication required. Password hashes are excluded from the response."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "{{host}}:{{port}}/{{basePath}}/auth/users"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"email\": \"test@example.com\",\n        \"username\": \"testuser\",\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"phone\": \"1234567890\",\n        \"country\": \"USA\",\n        \"role\": \"USER\",\n        \"createdBy\": \"system\",\n        \"createdAt\": \"2023-01-01T10:00:00\",\n        \"lastModifiedBy\": \"system\",\n        \"updatedAt\": \"2023-01-01T10:00:00\"\n    },\n    {\n        \"id\": 2,\n        \"email\": \"admin@example.com\",\n        \"username\": \"admin\",\n        \"firstName\": \"Admin\",\n        \"lastName\": \"User\",\n        \"phone\": \"9876543210\",\n        \"country\": \"USA\",\n        \"role\": \"ADMIN\",\n        \"createdBy\": \"system\",\n        \"createdAt\": \"2023-01-01T11:00:00\",\n        \"lastModifiedBy\": \"system\",\n        \"updatedAt\": \"2023-01-01T11:00:00\"\n    }\n]"
						}
					]
				},
				{
					"name": "Delete User by ID",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": "{{protocol}}://{{host}}:{{port}}/{{basePath}}/auth/users/1",
						"description": "Deletes a user by their ID. Replace '1' with an actual user ID. Requires JWT authentication."
					},
					"response": [
						{
							"name": "Successful Deletion",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt_token}}"
									}
								],
								"url": "{{host}}:{{port}}/{{basePath}}/auth/users/1"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"User deleted successfully\"\n}"
						}
					]
				},
				{
					"name": "Delete User by Email",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": "{{protocol}}://{{host}}:{{port}}/{{basePath}}/auth/users/email/test@example.com",
						"description": "Deletes a user by their email address. Replace 'test@example.com' with an actual email. Requires JWT authentication."
					},
					"response": [
						{
							"name": "Successful Deletion",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt_token}}"
									}
								],
								"url": "{{host}}:{{port}}/{{basePath}}/auth/users/email/test@example.com"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"User deleted successfully\"\n}"
						}
					]
				},
				{
					"name": "Refresh Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refreshToken\": \"your-refresh-token-here\"\n}"
						},
						"url": "{{protocol}}://{{host}}:{{port}}/{{basePath}}/auth/refresh",
						"description": "Refreshes the JWT token using a refresh token. The new token will include firstName and lastName claims."
					},
					"response": [
						{
							"name": "Successful Refresh",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"refreshToken\": \"your-refresh-token-here\"\n}"
								},
								"url": "{{host}}:{{port}}/{{basePath}}/auth/refresh"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"jwtToken\": \"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0QGV4YW1wbGUuY29tIiwiaWF0IjoxNjc4OTAyMjIyLCJleHAiOjE2Nzg5ODg2MjJ9.NEW_FAKE_JWT_TOKEN\",\n    \"refreshToken\": \"new-refresh-token-here\",\n    \"expiresIn\": 3600\n}"
						}
					]
				},
				{
					"name": "Change Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"currentPassword\": \"password123\",\n    \"newPassword\": \"newpassword456\"\n}"
						},
						"url": "{{protocol}}://{{host}}:{{port}}/{{basePath}}/auth/change-password",
						"description": "Changes the current user's password. Requires JWT authentication."
					},
					"response": [
						{
							"name": "Successful Password Change",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"currentPassword\": \"password123\",\n    \"newPassword\": \"newpassword456\"\n}"
								},
								"url": "{{host}}:{{port}}/{{basePath}}/auth/change-password"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Password changed successfully\"\n}"
						}
					]
				},
				{
					"name": "Forgot Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test@example.com\"\n}"
						},
						"url": "{{protocol}}://{{host}}:{{port}}/{{basePath}}/auth/forgot-password",
						"description": "Initiates a password reset process for the specified email address."
					},
					"response": [
						{
							"name": "Successful Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"test@example.com\"\n}"
								},
								"url": "{{host}}:{{port}}/{{basePath}}/auth/forgot-password"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Password reset instructions sent to your email\"\n}"
						}
					]
				},
				{
					"name": "Reset Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"token\": \"reset-token-here\",\n    \"newPassword\": \"newpassword456\"\n}"
						},
						"url": "{{protocol}}://{{host}}:{{port}}/{{basePath}}/auth/reset-password",
						"description": "Resets the password using a reset token received via email."
					},
					"response": [
						{
							"name": "Successful Reset",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token\": \"reset-token-here\",\n    \"newPassword\": \"newpassword456\"\n}"
								},
								"url": "{{host}}:{{port}}/{{basePath}}/auth/reset-password"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Password reset successfully\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Workflows",
			"item": [
				{
					"name": "Create New Workflow",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"My First Workflow\",\n    \"description\": \"A simple workflow to demonstrate API calls.\",\n    \"definitionJson\": \"{\\\"nodes\\\":[],\\\"edges\\\":[]}\",\n    \"isActive\": true\n}"
						},
						"url": "{{protocol}}://{{host}}:{{port}}/{{basePath}}/workflows",
						"description": "Creates a new workflow. Requires JWT authentication."
					},
					"response": []
				},
				{
					"name": "Get All Workflows",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": "{{protocol}}://{{host}}:{{port}}/{{basePath}}/workflows",
						"description": "Retrieves all workflows. Requires JWT authentication."
					},
					"response": []
				},
				{
					"name": "Get Workflow By ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": "{{protocol}}://{{host}}:{{port}}/{{basePath}}/workflows/1",
						"description": "Retrieves a specific workflow by ID. Replace '1' with an actual workflow ID. Requires JWT authentication."
					},
					"response": []
				},
				{
					"name": "Update Workflow By ID",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Workflow Name\",\n    \"description\": \"This workflow has been updated.\",\n    \"definitionJson\": \"{\\\"nodes\\\":[\\\"updated\\\"],\\\"edges\\\":[]}\",\n    \"isActive\": false\n}"
						},
						"url": "{{protocol}}://{{host}}:{{port}}/{{basePath}}/workflows/1",
						"description": "Updates an existing workflow by ID. Replace '1' with an actual workflow ID. Requires JWT authentication."
					},
					"response": []
				},
				{
					"name": "Delete Workflow By ID",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": "{{protocol}}://{{host}}:{{port}}/{{basePath}}/workflows/1",
						"description": "Deletes a workflow by ID. Replace '1' with an actual workflow ID. Requires JWT authentication."
					},
					"response": []
				},
				{
					"name": "Run Workflow By ID",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": "{{protocol}}://{{host}}:{{port}}/{{basePath}}/workflows/1/run",
						"description": "Triggers the execution of a workflow by ID. Replace '1' with an actual workflow ID. Requires JWT authentication."
					},
					"response": []
				}
			]
		},
		{
			"name": "AI Agent Configurations",
			"item": [
				{
					"name": "Create New AI Agent Config",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": 1, \n    \"name\": \"My Gemini Agent\",\n    \"type\": \"gemini\",\n    \"apiKey\": \"your-gemini-api-key-here\",\n    \"configJson\": \"{\\\"model\\\":\\\"gemini-pro\\\", \\\"temperature\\\":0.5}\"\n}"
						},
						"url": "{{protocol}}://{{host}}:{{port}}/{{basePath}}/ai-agents",
						"description": "Creates a new AI Agent Configuration. Requires JWT authentication."
					},
					"response": []
				},
				{
					"name": "Get All AI Agent Configs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": "{{protocol}}://{{host}}:{{port}}/{{basePath}}/ai-agents",
						"description": "Retrieves all AI Agent Configurations. Requires JWT authentication."
					},
					"response": []
				},
				{
					"name": "Get AI Agent Config by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": "{{protocol}}://{{host}}:{{port}}/{{basePath}}/ai-agents/1",
						"description": "Retrieves a specific AI Agent Configuration by ID. Replace '1' with an actual AI agent config ID. Requires JWT authentication."
					},
					"response": []
				},
				{
					"name": "Update AI Agent Config by ID",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": 1, \n    \"name\": \"Updated Gemini Agent\",\n    \"type\": \"gemini\",\n    \"apiKey\": \"your-updated-gemini-api-key\",\n    \"configJson\": \"{\\\"model\\\":\\\"gemini-1.5-pro\\\", \\\"temperature\\\":0.8}\"\n}"
						},
						"url": "{{protocol}}://{{host}}:{{port}}/{{basePath}}/ai-agents/1",
						"description": "Updates an existing AI Agent Configuration by ID. Replace '1' with an actual AI agent config ID. Requires JWT authentication."
					},
					"response": []
				},
				{
					"name": "Delete AI Agent Config by ID",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": "{{protocol}}://{{host}}:{{port}}/{{basePath}}/ai-agents/1",
						"description": "Deletes an AI Agent Configuration by ID. Replace '1' with an actual AI agent config ID. Requires JWT authentication."
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "protocol",
			"value": "http",
			"type": "string"
		},
		{
			"key": "host",
			"value": "localhost",
			"type": "string"
		},
		{
			"key": "port",
			"value": "8080",
			"type": "string"
		},
		{
			"key": "basePath",
			"value": "/api",
			"type": "string"
		},
		{
			"key": "jwt_token",
			"value": "",
			"type": "string"
		}
	]
}