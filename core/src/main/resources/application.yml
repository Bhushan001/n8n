server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024

spring:
  application:
    name: ai-workflow-core
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:ai_workflow_db}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    virtual-host: ${RABBITMQ_VHOST:/}
  websocket:
    allowed-origins: http://localhost:4200,https://your-production-domain.com
  security:
    jwt:
      secret: ${JWT_SECRET:ZmQ0ZGI5NjQ0MDQwNDBhMTY4ZTA3YzFhODFjM2M0MjY=}
      refresh-secret: ${JWT_REFRESH_SECRET:ZmQ0ZGI5NjQ0MDQwNDBhMTY4ZTA3YzFhODFjM2M0Mjc=}
      expiration: 3600 # 1 hour in seconds
      refresh-expiration: 604800 # 7 days in seconds

gemini:
  api:
    key: AIzaSyAJ9GJIm5IjMbCNM7tS3i0BHr3LpKq-UTs

logging:
  level:
    com.n8n.ai.core: ${LOG_LEVEL:INFO}
    org.springframework.security: ${SECURITY_LOG_LEVEL:WARN}
    org.hibernate.SQL: ${SQL_LOG_LEVEL:WARN}
    org.hibernate.type.descriptor.sql.BasicBinder: ${SQL_PARAM_LOG_LEVEL:WARN}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/ai-workflow-core.log
    max-size: 10MB
    max-history: 30

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true

app:
  cors:
    allowed-origins: http://localhost:4200,https://your-production-domain.com
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS,PATCH
    allowed-headers: "*"
    allow-credentials: true
    max-age: 3600
  
  workflow:
    max-nodes: 100
    max-execution-time: 300 # 5 minutes
    default-timeout: 60 # 1 minute
  
  security:
    password:
      min-length: 8
      require-uppercase: true
      require-lowercase: true
      require-numbers: true
      require-special-chars: true
    session:
      timeout: 3600 # 1 hour
    rate-limit:
      enabled: true
      requests-per-minute: 100

# Environment-specific overrides
---
spring:
  config:
    activate:
      on-profile: dev
  jpa:
    show-sql: true
  security:
    jwt:
      expiration: 86400 # 24 hours for development

logging:
  level:
    com.n8n.ai.core: DEBUG
    org.springframework.security: DEBUG

---
spring:
  config:
    activate:
      on-profile: prod
  jpa:
    show-sql: false
  security:
    jwt:
      expiration: 3600 # 1 hour for production

logging:
  level:
    com.n8n.ai.core: WARN
    org.springframework.security: WARN