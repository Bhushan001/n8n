version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ai-workflow-postgres
    environment:
      POSTGRES_DB: ai_workflow_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - ai-workflow-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: ai-workflow-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - ai-workflow-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: ai-workflow-backend
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ai_workflow_db
      DB_USERNAME: postgres
      DB_PASSWORD: password
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: guest
      RABBITMQ_PASSWORD: guest
      JWT_SECRET: ZmQ0ZGI5NjQ0MDQwNDBhMTY4ZTA3YzFhODFjM2M0MjY=
      JWT_REFRESH_SECRET: ZmQ0ZGI5NjQ0MDQwNDBhMTY4ZTA3YzFhODFjM2M0Mjc=
      SERVER_PORT: 8080
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - ai-workflow-network
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  # Angular Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: ai-workflow-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - ai-workflow-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  rabbitmq_data:
    driver: local

networks:
  ai-workflow-network:
    driver: bridge 