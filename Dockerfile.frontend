# Multi-stage build for Angular application
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package files
COPY ai-workflow-frontend/package*.json ./

# Install dependencies with legacy peer deps to handle version conflicts
# Use npm install instead of npm ci to handle package-lock.json sync issues
RUN npm install --legacy-peer-deps

# Copy source code
COPY ai-workflow-frontend/ .

# Build the application
RUN npm run build

# Runtime stage
FROM nginx:alpine

# Copy custom nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf

# Copy built application from builder stage
COPY --from=builder /app/dist/ai-workflow-frontend/browser /usr/share/nginx/html

# Expose port
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:80 || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"] 